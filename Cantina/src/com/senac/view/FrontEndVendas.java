/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.senac.view;

import com.senac.dao.ClienteDao;
import com.senac.dao.ProdutoDao;
import com.senac.dao.VendaDao;
import com.senac.exceptions.MatriculaInvalidaException;
import com.senac.exceptions.SaldoException;
import com.senac.model.ItemVenda;
import com.senac.model.Produto;
import com.senac.model.Venda;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * 
 */
public class FrontEndVendas extends javax.swing.JFrame {

    /**
     * Creates new form Venda
     * @param usuario
     */
    public FrontEndVendas(String usuario) {
        this.usuario = usuario;
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        lbQuantidade = new javax.swing.JLabel();
        fldQuantidade = new javax.swing.JTextField();
        lbCodigo = new javax.swing.JLabel();
        fldCodigo = new javax.swing.JTextField();
        scrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        lbTotal = new javax.swing.JLabel();
        fldTotal = new javax.swing.JTextField();
        btFinalizar = new javax.swing.JButton();
        lbMatricula = new javax.swing.JLabel();
        fldMatricula = new javax.swing.JFormattedTextField();

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbQuantidade.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbQuantidade.setText("Quantidade:");

        fldQuantidade.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        fldQuantidade.setText("1");

        lbCodigo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbCodigo.setText("Código:");

        fldCodigo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        fldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fldCodigoActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Quantidade", "Código", "Item", "Valor Unit.", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
        }

        lbTotal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbTotal.setText("Total:");

        fldTotal.setEditable(false);
        fldTotal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        btFinalizar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btFinalizar.setText("Finalizar Venda");
        btFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarActionPerformed(evt);
            }
        });

        lbMatricula.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbMatricula.setText("Matrícula:");

        try {
            fldMatricula.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fldMatricula.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCodigo)
                            .addComponent(fldCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(btFinalizar)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMatricula)
                            .addComponent(fldMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbQuantidade)
                    .addComponent(lbCodigo)
                    .addComponent(lbMatricula))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fldMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotal)
                    .addComponent(btFinalizar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fldCodigoActionPerformed
        adicionarProduto();
    }//GEN-LAST:event_fldCodigoActionPerformed

    private void btFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarActionPerformed
        salvarVenda();
    }//GEN-LAST:event_btFinalizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btFinalizar;
    private javax.swing.JTextField fldCodigo;
    private javax.swing.JFormattedTextField fldMatricula;
    private javax.swing.JTextField fldQuantidade;
    private javax.swing.JTextField fldTotal;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbMatricula;
    private javax.swing.JLabel lbQuantidade;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
    private String usuario;
    
    ProdutoDao pd = new ProdutoDao();
    private double total = 0;
    double saldo, totalVenda;
    List<ItemVenda> listaItens = new ArrayList();
    DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
    Date date;

    private void adicionarProduto() {
        try {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            List<Produto> prod = pd.listarProdutos(fldCodigo.getText());
            int quantidade = Integer.parseInt(fldQuantidade.getText());
            for (Produto p : prod) {
                saldo = quantidade * p.getPreco();
                model.addRow(new Object[]{quantidade, fldCodigo.getText(), p.getNome(), p.getPreco(), corrigeValor(saldo)});

                ItemVenda iv = new ItemVenda();
                iv.setQuantidade(quantidade);
                iv.setCodProduto(Integer.parseInt(fldCodigo.getText()));
                iv.setNome(p.getNome());
                iv.setPreco(p.getPreco());
                listaItens.add(iv);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao adicionar produto", "", JOptionPane.ERROR_MESSAGE);
        }
        total += saldo;
        fldTotal.setText(String.valueOf(corrigeValor(total)));
    }

    private BigDecimal corrigeValor(Double total) {
        BigDecimal valor = new BigDecimal(total).setScale(2, RoundingMode.HALF_UP);
        return valor;
    }

    private void salvarVenda() {
        try {
            totalVenda = Double.parseDouble(fldTotal.getText());
            VendaDao vd = new VendaDao();
            Venda v = new Venda();
            v.setDataVenda(dateFormat.format(getSystemDate()));
            v.setTotalVenda(Double.parseDouble(String.valueOf(corrigeValor(total))));
            int matricula = Integer.parseInt(fldMatricula.getText());
            ClienteDao cd = new ClienteDao();
            cd.validarCliente(matricula, totalVenda);
            vd.salvar(v, listaItens, usuario, matricula, totalVenda);
            JOptionPane.showMessageDialog(null, "Venda efetuada com sucesso");
            dispose();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar venda", "", JOptionPane.ERROR_MESSAGE);
        } catch (SaldoException ex){
            JOptionPane.showMessageDialog(null, "Saldo insuficiente", "", JOptionPane.ERROR_MESSAGE);
        } catch (MatriculaInvalidaException e){
            JOptionPane.showMessageDialog(null, "Matricula inválida", "", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado.\n"+e.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }

    private Date getSystemDate() {
        date = new Date();
        return date;
    }
}
